name: Python Release to GitHub

on:
  push:
    tags:
      - 'v*'
  workflow_run:
    workflows: ["Code Formatter and Linter"]
    branches: [main]
    types:
      - completed

jobs:
  release-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache Poetry dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml', '**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          export PATH="$HOME/.local/bin:$PATH"

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-root --no-interaction 
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Use cached dependencies
        run: |
          echo "Using cached Poetry dependencies."
        if: steps.cached-poetry-dependencies.outputs.cache-hit == 'true'

      - name: Build release distributions
        run: poetry build

      - name: Upload distributions as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ðŸš€ **New Release: ${{ github.ref_name }}** ðŸš€
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
