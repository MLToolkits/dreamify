name: Publish to PyPI

on:
  push:
    tags:
      - "v*"

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: "3.10"

      - name: Install dependencies for Black and isort
        run: |
          pip install black isort

      - name: Run isort to sort imports
        run: isort .

      - name: Run Black
        run: black .

      - name: Show diff if formatting was needed
        run: |
          git diff
          exit 0

  lint:
    runs-on: ubuntu-latest
    needs: format

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: "3.10"

      - name: Install dependencies for Flake8
        run: pip install flake8

      - name: Run Flake8
        run: flake8 .

      - name: Show diff if linting was needed
        run: |
          git diff
          exit 0

  release-build:
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache Poetry dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml', '**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          export PATH="$HOME/.local/bin:$PATH"

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-root --no-interaction
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Use cached dependencies
        run: |
          echo "Using cached Poetry dependencies."
        if: steps.cached-poetry-dependencies.outputs.cache-hit == 'true'

      - name: Authenticate on PyPI using poetry
        environment: PYPI
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}

      - name: Publish to PyPI
        run: poetry publish --build
